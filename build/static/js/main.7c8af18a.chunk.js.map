{"version":3,"sources":["helpers.js","components/StorePicker.js","components/Header.js","components/Order.js","components/AddFishForm.js","components/EditFishForm.jsx","base.js","components/Inventory.js","sample-fishes.js","components/Fish.jsx","components/App.js","components/NotFound.js","components/Router.js","index.js"],"names":["formatPrice","cents","toLocaleString","style","currency","rando","arr","Math","floor","random","length","getFunName","adjectives","StorePicker","myInput","React","createRef","goToStore","event","preventDefault","storeName","current","value","props","history","push","className","onSubmit","this","type","ref","required","placeholder","defaultValue","Component","Header","tagline","Order","renderOrder","key","fish","fishes","count","order","isAvailable","status","CSSTransition","classNames","timeout","enter","exit","name","price","onClick","removeItem","orderIds","Object","keys","total","reduce","prevTotal","TransitionGroup","component","map","AddFishForm","nameRef","priceRef","statusRef","descRef","imageRef","createFish","parseFloat","desc","image","addFish","currentTarget","reset","EditFishForm","handleChange","updatedFish","updateFish","fishKey","deleteFish","onChange","firebaseApp","firebase","initializeApp","apiKey","authDomain","databaseURL","base","Rebase","createClass","database","Inventory","authHander","authData","a","fetch","storeId","context","store","console","log","authenticate","provider","authProvider","auth","signInWithPopup","then","authHandler","loadSampleFishes","fish1","fish2","fish3","fish4","fish5","fish6","fish7","fish8","fish9","Fish","details","src","alt","disabled","addToOrder","index","App","state","Date","now","setState","sampleFishes","removeFromOrder","params","match","localStorageRef","localStorage","getItem","JSON","parse","syncState","removeBinding","setItem","stringify","NotFound","Router","exact","path","render","document","querySelector"],"mappings":"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","file":"static/js/main.7c8af18a.chunk.js","sourcesContent":["export function formatPrice(cents) {\r\n  return (cents / 100).toLocaleString(\"en-US\", {\r\n    style: \"currency\",\r\n    currency: \"USD\"\r\n  });\r\n}\r\n\r\nexport function rando(arr) {\r\n  return arr[Math.floor(Math.random() * arr.length)];\r\n}\r\n\r\nexport function slugify(text) {\r\n  return text\r\n    .toString()\r\n    .toLowerCase()\r\n    .replace(/\\s+/g, \"-\")\r\n    .replace(/[^\\w-]+/g, \"\")\r\n    .replace(/--+/g, \"-\")\r\n    .replace(/^-+/, \"\")\r\n    .replace(/-+$/, \"\");\r\n}\r\n\r\nexport function getFunName() {\r\n  const adjectives = [\r\n    \"adorable\",\r\n    \"beautiful\",\r\n    \"clean\",\r\n    \"drab\",\r\n    \"elegant\",\r\n    \"fancy\",\r\n    \"glamorous\",\r\n    \"handsome\",\r\n    \"long\",\r\n    \"magnificent\",\r\n    \"old-fashioned\",\r\n    \"plain\",\r\n    \"quaint\",\r\n    \"sparkling\",\r\n    \"ugliest\",\r\n    \"unsightly\",\r\n    \"angry\",\r\n    \"bewildered\",\r\n    \"clumsy\",\r\n    \"defeated\",\r\n    \"embarrassed\",\r\n    \"fierce\",\r\n    \"grumpy\",\r\n    \"helpless\",\r\n    \"itchy\",\r\n    \"jealous\",\r\n    \"lazy\",\r\n    \"mysterious\",\r\n    \"nervous\",\r\n    \"obnoxious\",\r\n    \"panicky\",\r\n    \"repulsive\",\r\n    \"scary\",\r\n    \"thoughtless\",\r\n    \"uptight\",\r\n    \"worried\"\r\n  ];\r\n\r\n  const nouns = [\r\n    \"women\",\r\n    \"men\",\r\n    \"children\",\r\n    \"teeth\",\r\n    \"feet\",\r\n    \"people\",\r\n    \"leaves\",\r\n    \"mice\",\r\n    \"geese\",\r\n    \"halves\",\r\n    \"knives\",\r\n    \"wives\",\r\n    \"lives\",\r\n    \"elves\",\r\n    \"loaves\",\r\n    \"potatoes\",\r\n    \"tomatoes\",\r\n    \"cacti\",\r\n    \"foci\",\r\n    \"fungi\",\r\n    \"nuclei\",\r\n    \"syllabuses\",\r\n    \"analyses\",\r\n    \"diagnoses\",\r\n    \"oases\",\r\n    \"theses\",\r\n    \"crises\",\r\n    \"phenomena\",\r\n    \"criteria\",\r\n    \"data\"\r\n  ];\r\n\r\n  return `${rando(adjectives)}-${rando(adjectives)}-${rando(nouns)}`;\r\n}\r\n","import React from 'react';\r\nimport { getFunName } from '../helpers';\r\nimport PropTypes from 'prop-types';\r\nclass StorePicker extends React.Component {\r\n  myInput = React.createRef();\r\n  static propTypes = {\r\n    history: PropTypes.object,\r\n  };\r\n  goToStore = (event) => {\r\n    // 1. Stop the form from submitting\r\n    event.preventDefault();\r\n    // 2. get the text from that input\r\n    const storeName = this.myInput.current.value;\r\n    // 3. Change the page to /store/whatever-they-entered\r\n    this.props.history.push(`/store/${storeName}`);\r\n  };\r\n  render() {\r\n    return (\r\n      <form className=\"store-selector\" onSubmit={this.goToStore}>\r\n        <h2>Please Enter A Store</h2>\r\n        <input\r\n          type=\"text\"\r\n          ref={this.myInput}\r\n          required\r\n          placeholder=\"Store Name\"\r\n          defaultValue={getFunName()}\r\n        />\r\n        <button type=\"submit\">Visit Store →</button>\r\n      </form>\r\n    );\r\n  }\r\n}\r\n\r\nexport default StorePicker;\r\n","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\n\r\nconst Header = (props) => (\r\n  <header className=\"top\">\r\n    <h1>\r\n      Catch\r\n      <span className=\"ofThe\">\r\n        <span className=\"of\">Of</span>\r\n        <span className=\"the\">The</span>\r\n      </span>\r\n      Day\r\n    </h1>\r\n    <h3 className=\"tagline\">\r\n      <span>{props.tagline}</span>\r\n    </h3>\r\n  </header>\r\n);\r\n\r\nHeader.propTypes = {\r\n  tagline: PropTypes.string.isRequired,\r\n};\r\n\r\nexport default Header;\r\n","import React from 'react';\r\nimport { formatPrice } from '../helpers';\r\nimport { TransitionGroup, CSSTransition } from 'react-transition-group';\r\nimport PropTypes from 'prop-types';\r\nclass Order extends React.Component {\r\n  static propTypes = {\r\n    fishes: PropTypes.object,\r\n    order: PropTypes.object,\r\n    removeFromOrder: PropTypes.func,\r\n  };\r\n  renderOrder = (key) => {\r\n    const fish = this.props.fishes[key];\r\n    const count = this.props.order[key];\r\n    const isAvailable = fish && fish.status === 'available';\r\n    // make sure the fish is loaded before we continue\r\n    if (!fish) return null;\r\n    if (!isAvailable) {\r\n      return (\r\n        <CSSTransition\r\n          classNames=\"order\"\r\n          key={key}\r\n          timeout={{ enter: 250, exit: 250 }}\r\n        >\r\n          <li key={key}>\r\n            Sorry {fish ? fish.name : 'fish'} is no longer available\r\n          </li>\r\n        </CSSTransition>\r\n      );\r\n    }\r\n    return (\r\n      <CSSTransition\r\n        classNames=\"order\"\r\n        key={key}\r\n        timeout={{ enter: 250, exit: 250 }}\r\n      >\r\n        <li key={key}>\r\n          {count} lbs {fish.name}\r\n          {formatPrice(count * fish.price)}\r\n          <button onClick={() => this.props.removeItem(key)}>Remove</button>\r\n        </li>\r\n      </CSSTransition>\r\n    );\r\n  };\r\n  render() {\r\n    const orderIds = Object.keys(this.props.order);\r\n    const total = orderIds.reduce((prevTotal, key) => {\r\n      const fish = this.props.fishes[key];\r\n      const count = this.props.order[key];\r\n      const isAvailable = fish && fish.status === 'available';\r\n      if (isAvailable) {\r\n        return prevTotal + count * fish.price;\r\n      }\r\n      return prevTotal;\r\n    }, 0);\r\n    return (\r\n      <div className=\"order-wrap\">\r\n        <h2>Order</h2>\r\n        <TransitionGroup component=\"ul\" className=\"order\">\r\n          {orderIds.map(this.renderOrder)}\r\n        </TransitionGroup>\r\n        <div className=\"total\">\r\n          Total:\r\n          <strong>{formatPrice(total)}</strong>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Order;\r\n","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\n\r\nclass AddFishForm extends React.Component {\r\n  nameRef = React.createRef();\r\n  priceRef = React.createRef();\r\n  statusRef = React.createRef();\r\n  descRef = React.createRef();\r\n  imageRef = React.createRef();\r\n\r\n  static propTypes = {\r\n    addFish: PropTypes.func,\r\n  };\r\n\r\n  createFish = (event) => {\r\n    // 1.  stop the form from submitting\r\n    event.preventDefault();\r\n    const fish = {\r\n      name: this.nameRef.current.value,\r\n      price: parseFloat(this.priceRef.current.value),\r\n      status: this.statusRef.current.value,\r\n      desc: this.descRef.current.value,\r\n      image: this.imageRef.current.value,\r\n    };\r\n    this.props.addFish(fish);\r\n    // refresh the form\r\n    event.currentTarget.reset();\r\n  };\r\n  render() {\r\n    return (\r\n      <form className=\"fish-edit\" onSubmit={this.createFish}>\r\n        <input name=\"name\" ref={this.nameRef} type=\"text\" placeholder=\"Name\" />\r\n        <input\r\n          name=\"price\"\r\n          ref={this.priceRef}\r\n          type=\"text\"\r\n          placeholder=\"Price\"\r\n        />\r\n        <select name=\"status\" ref={this.statusRef}>\r\n          <option value=\"available\">Fresh!</option>\r\n          <option value=\"unavailable\">Sold Out!</option>\r\n        </select>\r\n\r\n        <textarea name=\"desc\" ref={this.descRef} placeholder=\"Desc\" />\r\n        <input\r\n          name=\"image\"\r\n          ref={this.imageRef}\r\n          type=\"text\"\r\n          placeholder=\"Image\"\r\n        />\r\n        <button type=\"submit\">+ Add Fish</button>\r\n      </form>\r\n    );\r\n  }\r\n}\r\n\r\nexport default AddFishForm;\r\n","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\n\r\nclass EditFishForm extends React.Component {\r\n  static propTypes = {\r\n    fish: PropTypes.shape({\r\n      image: PropTypes.string,\r\n      name: PropTypes.string,\r\n      price: PropTypes.number,\r\n      desc: PropTypes.string,\r\n      status: PropTypes.string,\r\n    }),\r\n    index: PropTypes.string,\r\n    updateFish: PropTypes.func,\r\n  };\r\n  handleChange = (event) => {\r\n    // update taht fish\r\n    // 1. Take a copy of the current Fish\r\n    const updatedFish = {\r\n      ...this.props.fish,\r\n      [event.currentTarget.name]: event.currentTarget.value,\r\n    };\r\n    this.props.updateFish(this.props.fishKey, updatedFish);\r\n  };\r\n  deleteFish = () => {\r\n    this.props.deleteFish(this.props.fishKey);\r\n  };\r\n  render() {\r\n    return (\r\n      <div className=\"fish-edit\">\r\n        <input\r\n          type=\"text\"\r\n          name=\"name\"\r\n          onChange={this.handleChange}\r\n          value={this.props.fish.name}\r\n        />\r\n        <input\r\n          type=\"text\"\r\n          name=\"price\"\r\n          onChange={this.handleChange}\r\n          value={this.props.fish.price}\r\n        />\r\n        <select\r\n          type=\"text\"\r\n          name=\"status\"\r\n          onChange={this.handleChange}\r\n          value={this.props.fish.status}\r\n        >\r\n          <option value=\"available\">Fresh!</option>\r\n          <option value=\"unavailable\">Sold Out!</option>\r\n        </select>\r\n        <textarea\r\n          name=\"desc\"\r\n          onChange={this.handleChange}\r\n          value={this.props.fish.desc}\r\n        />\r\n        <input\r\n          type=\"text\"\r\n          name=\"image\"\r\n          onChange={this.handleChange}\r\n          value={this.props.fish.image}\r\n        />\r\n        <button onClick={this.deleteFish}>Remove Fish</button>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default EditFishForm;\r\n","import Rebase from 're-base';\r\nimport firebase from 'firebase';\r\n\r\nconst firebaseApp = firebase.initializeApp({\r\n  apiKey: 'AIzaSyAmzEWjnmezxJU2FXioXoWZwi_YB3vFB2U',\r\n  authDomain: 'catch-of-the-day-tb-6881b.firebaseapp.com',\r\n  databaseURL: 'https://catch-of-the-day-tb-6881b-default-rtdb.firebaseio.com',\r\n});\r\n\r\nconst base = Rebase.createClass(firebaseApp.database());\r\n\r\n// This is a named export\r\nexport { firebaseApp };\r\n\r\n// This is a default export\r\n export default base;","import React from 'react';\r\nimport AddFishForm from './AddFishForm';\r\nimport EditFishForm from './EditFishForm';\r\nimport PropTypes from 'prop-types';\r\nimport Login from './Login';\r\nimport firebase from 'firebase';\r\nimport base, { firebaseApp } from '../base';\r\nclass Inventory extends React.Component {\r\n  static propTypes = {\r\n    fishes: PropTypes.object,\r\n    updateFish: PropTypes.func,\r\n    deleteFish: PropTypes.func,\r\n    loadSampleFishes: PropTypes.func,\r\n    addFish: PropTypes.func,\r\n  };\r\n\r\n  authHander = async (authData) => {\r\n    // 1. Look up the current store in the firebase database\r\n    const store = await base.fetch(this.props.storeId, { context: this });\r\n    // 2. Claim it if there is no owner\r\n    //\r\n    console.log(store);\r\n  };\r\n\r\n  authenticate = (provider) => {\r\n    const authProvider = new firebase.auth[`${provider}AuthProvider`]();\r\n    firebaseApp.auth().signInWithPopup(authProvider).then(this.authHandler);\r\n  };\r\n\r\n  render() {\r\n    // return <Login authenticate={this.authenticate} />;\r\n    return (\r\n      <div className=\"inventory\">\r\n        <h2>Inventory</h2>\r\n        {Object.keys(this.props.fishes).map((fish) => (\r\n          <EditFishForm\r\n            updateFish={this.props.updateFish}\r\n            fish={this.props.fishes[fish]}\r\n            key={fish}\r\n            fishKey={fish}\r\n            deleteFish={this.props.deleteFish}\r\n          />\r\n        ))}\r\n        <AddFishForm addFish={this.props.addFish} />\r\n        <button onClick={this.props.loadSampleFishes}>\r\n          Load Sample Fishes\r\n        </button>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Inventory;\r\n","// This is just some sample data so you don't have to think of your own!\r\nconst fishes = {\r\n  fish1: {\r\n    name: \"Pacific Halibut\",\r\n    image: \"/images/hali.jpg\",\r\n    desc:\r\n      \"Everyone’s favorite white fish. We will cut it to the size you need and ship it.\",\r\n    price: 1724,\r\n    status: \"available\"\r\n  },\r\n\r\n  fish2: {\r\n    name: \"Lobster\",\r\n    image: \"/images/lobster.jpg\",\r\n    desc:\r\n      \"These tender, mouth-watering beauties are a fantastic hit at any dinner party.\",\r\n    price: 3200,\r\n    status: \"available\"\r\n  },\r\n\r\n  fish3: {\r\n    name: \"Sea Scallops\",\r\n    image: \"/images/scallops.jpg\",\r\n    desc:\r\n      \"Big, sweet and tender. True dry-pack scallops from the icey waters of Alaska. About 8-10 per pound\",\r\n    price: 1684,\r\n    status: \"unavailable\"\r\n  },\r\n\r\n  fish4: {\r\n    name: \"Mahi Mahi\",\r\n    image: \"/images/mahi.jpg\",\r\n    desc:\r\n      \"Lean flesh with a mild, sweet flavor profile, moderately firm texture and large, moist flakes. \",\r\n    price: 1129,\r\n    status: \"available\"\r\n  },\r\n\r\n  fish5: {\r\n    name: \"King Crab\",\r\n    image: \"/images/crab.jpg\",\r\n    desc:\r\n      \"Crack these open and enjoy them plain or with one of our cocktail sauces\",\r\n    price: 4234,\r\n    status: \"available\"\r\n  },\r\n\r\n  fish6: {\r\n    name: \"Atlantic Salmon\",\r\n    image: \"/images/salmon.jpg\",\r\n    desc:\r\n      \"This flaky, oily salmon is truly the king of the sea. Bake it, grill it, broil it...as good as it gets!\",\r\n    price: 1453,\r\n    status: \"available\"\r\n  },\r\n\r\n  fish7: {\r\n    name: \"Oysters\",\r\n    image: \"/images/oysters.jpg\",\r\n    desc: \"A soft plump oyster with a sweet salty flavor and a clean finish.\",\r\n    price: 2543,\r\n    status: \"available\"\r\n  },\r\n\r\n  fish8: {\r\n    name: \"Mussels\",\r\n    image: \"/images/mussels.jpg\",\r\n    desc:\r\n      \"The best mussels from the Pacific Northwest with a full-flavored and complex taste.\",\r\n    price: 425,\r\n    status: \"available\"\r\n  },\r\n\r\n  fish9: {\r\n    name: \"Jumbo Prawns\",\r\n    image: \"/images/prawns.jpg\",\r\n    desc:\r\n      \"With 21-25 two bite prawns in each pound, these sweet morsels are perfect for shish-kabobs.\",\r\n    price: 2250,\r\n    status: \"available\"\r\n  }\r\n};\r\n\r\nexport default fishes;\r\n","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport { formatPrice } from '../helpers';\r\n\r\nclass Fish extends React.Component {\r\n  static propTypes = {\r\n    details: PropTypes.shape({\r\n      image: PropTypes.string,\r\n      name: PropTypes.string,\r\n      price: PropTypes.number,\r\n      desc: PropTypes.string,\r\n      status: PropTypes.string,\r\n    }),\r\n    addToOrder: PropTypes.func,\r\n  };\r\n  render() {\r\n    const { image, name, price, desc, status } = this.props.details;\r\n    const isAvailable = status === 'available';\r\n    return (\r\n      <li className=\"menu-fish\">\r\n        <img src={image} alt={name} />\r\n        <h3 className=\"fish-name\">\r\n          {name}\r\n          <span className=\"price\">{formatPrice(price)}</span>\r\n        </h3>\r\n        <p>{desc}</p>\r\n        <button\r\n          disabled={!isAvailable}\r\n          onClick={() => this.props.addToOrder(this.props.index)}\r\n        >\r\n          {isAvailable ? 'Add To Order' : 'Sold Out!'}\r\n        </button>\r\n      </li>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Fish;\r\n","import React from 'react';\r\nimport Header from './Header';\r\nimport Order from './Order';\r\nimport Inventory from './Inventory';\r\nimport sampleFishes from '../sample-fishes';\r\nimport Fish from './Fish';\r\nimport base from '../base';\r\nimport PropTypes from 'prop-types';\r\nclass App extends React.Component {\r\n  state = {\r\n    fishes: {},\r\n    order: {},\r\n  };\r\n\r\n  static propTypes = {\r\n    match: PropTypes.object,\r\n  };\r\n  componentDidMount() {\r\n    const { params } = this.props.match;\r\n    // first reinstate our localStorage\r\n    const localStorageRef = localStorage.getItem(params.storeId);\r\n    if (localStorageRef) {\r\n      this.setState({ order: JSON.parse(localStorageRef) });\r\n    }\r\n\r\n    this.ref = base.syncState(`${params.storeId}/fishes`, {\r\n      context: this,\r\n      state: 'fishes',\r\n    });\r\n  }\r\n\r\n  componentWillUnmount() {\r\n    base.removeBinding(this.ref);\r\n  }\r\n\r\n  componentDidUpdate() {\r\n    localStorage.setItem(\r\n      this.props.match.params.storeId,\r\n      JSON.stringify(this.state.order)\r\n    );\r\n  }\r\n\r\n  addFish = (fish) => {\r\n    // 1. Take a copy of the existing state\r\n    const fishes = { ...this.state.fishes };\r\n    // 2. Add our new fish to that fishes variable\r\n    fishes[`fish${Date.now()}`] = fish;\r\n    // 3. Set the new fishes object to state\r\n    this.setState({ fishes });\r\n  };\r\n\r\n  updateFish = (key, updateFish) => {\r\n    console.log(key, updateFish);\r\n    //  1. take a copy of current state\r\n    const fishes = { ...this.state.fishes };\r\n    // 2. Update that state\r\n    fishes[key] = updateFish;\r\n    // 3. Set that to state\r\n    this.setState({ fishes });\r\n  };\r\n\r\n  deleteFish = (key) => {\r\n    // 1. take a copy of state\r\n    const fishes = { ...this.state.fishes };\r\n    // 2. Update the state\r\n    fishes[key] = null;\r\n    // update state\r\n    this.setState({ fishes });\r\n  };\r\n\r\n  loadSampleFishes = () => {\r\n    this.setState({ fishes: sampleFishes });\r\n  };\r\n\r\n  addToOrder = (key) => {\r\n    // 1. take a copy of state\r\n    const order = { ...this.state.order };\r\n    // 2. Either add to the order, or update the number in our order\r\n    order[key] = order[key] + 1 || 1;\r\n    // 3. Call setState to update our state object\r\n    this.setState({ order });\r\n  };\r\n\r\n  removeFromOrder = (key) => {\r\n    // Take copy of state\r\n    const order = { ...this.state.order };\r\n    // Update the state\r\n    delete order[key];\r\n    // Update state\r\n    this.setState({ order });\r\n  };\r\n\r\n  render() {\r\n    return (\r\n      <div className=\"catch-of-the-day\">\r\n        <div className=\"menu\">\r\n          <Header tagline=\"Fresh Seafood Market\" />\r\n          <ul className=\"fishes\">\r\n            {Object.keys(this.state.fishes).map((key) => (\r\n              <Fish\r\n                key={key}\r\n                index={key}\r\n                details={this.state.fishes[key]}\r\n                addToOrder={this.addToOrder}\r\n              />\r\n            ))}\r\n          </ul>\r\n        </div>\r\n        <Order\r\n          fishes={this.state.fishes}\r\n          order={this.state.order}\r\n          removeItem={this.removeFromOrder}\r\n        />\r\n        <Inventory\r\n          fishes={this.state.fishes}\r\n          deleteFish={this.deleteFish}\r\n          updateFish={this.updateFish}\r\n          addFish={this.addFish}\r\n          loadSampleFishes={this.loadSampleFishes}\r\n          storeId={this.props.match.params.storeId}\r\n        />\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default App;\r\n","import React from 'react';\r\n\r\nconst NotFound = () => (\r\n  <div>\r\n    <h2>Not Found!?!!!!1111</h2>\r\n  </div>\r\n);\r\n\r\nexport default NotFound;\r\n","import React from 'react';\r\nimport { BrowserRouter, Route, Switch } from 'react-router-dom';\r\nimport StorePicker from './StorePicker';\r\nimport App from './App';\r\nimport NotFound from './NotFound';\r\n\r\nconst Router = () => (\r\n  <BrowserRouter>\r\n    <Switch>\r\n      <Route exact path=\"/\" component={StorePicker} />\r\n      <Route path=\"/store/:storeId\" component={App} />\r\n      <Route component={NotFound} />\r\n    </Switch>\r\n  </BrowserRouter>\r\n);\r\n\r\nexport default Router;\r\n","import React from 'react';\r\nimport { render } from 'react-dom';\r\nimport './css/style.css';\r\nimport Router from './components/Router';\r\n\r\nrender(<Router />, document.querySelector('#main'));\r\n"],"sourceRoot":""}